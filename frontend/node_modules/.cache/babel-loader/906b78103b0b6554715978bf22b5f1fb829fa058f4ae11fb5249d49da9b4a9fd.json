{"ast":null,"code":"var _jsxFileName = \"/Users/jtlovato/Documents/GitHub/AOPortfolio/AyodelePortfolio/frontend/src/screens/LatestInfoScreen.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useReducer } from \"react\";\nimport axios from \"axios\";\nimport Product from \"../components/Info\";\nimport LoadingBox from \"../components/LoadingBox\";\nimport MessageBox from \"../components/MessageBox\";\nimport Info from \"../components/Info\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_REQUEST\":\n      return {\n        ...state,\n        loading: true\n      };\n    case \"FETCH_SUCCESS\":\n      return {\n        ...state,\n        products: action.payload,\n        loading: false\n      };\n    case \"FETCH_FAIL\":\n      return {\n        ...state,\n        loading: false,\n        error: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport default function LatestInfoScreen() {\n  _s();\n  const [{\n    loading,\n    error,\n    products\n  }, dispatch] = useReducer(reducer, {\n    products: [],\n    loading: true,\n    error: \"\"\n  });\n  // const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({\n        type: \"FETCH_REQUEST\"\n      });\n      try {\n        const result = await axios.get(\"/api/products\");\n        dispatch({\n          type: \"FETCH_SUCCESS\",\n          payload: result.data\n        });\n      } catch (err) {\n        dispatch({\n          type: \"FETCH_FAIL\",\n          payload: err.message\n        });\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Latest Blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"products\",\n      children: loading ? /*#__PURE__*/_jsxDEV(LoadingBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this) : error ? /*#__PURE__*/_jsxDEV(MessageBox, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: products.map(product => /*#__PURE__*/_jsxDEV(\"div\", {\n          sm: 6,\n          md: 4,\n          lg: 3,\n          className: \"mb-3\",\n          children: /*#__PURE__*/_jsxDEV(Product, {\n            product: product\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)\n        }, product.slug, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(LatestInfoScreen, \"FP1LDBQy9aHWG88JY6c3ecoQWUQ=\");\n_c = LatestInfoScreen;\nvar _c;\n$RefreshReg$(_c, \"LatestInfoScreen\");","map":{"version":3,"names":["useEffect","useReducer","axios","Product","LoadingBox","MessageBox","Info","jsxDEV","_jsxDEV","reducer","state","action","type","loading","products","payload","error","LatestInfoScreen","_s","dispatch","fetchData","result","get","data","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","variant","map","product","sm","md","lg","slug","_c","$RefreshReg$"],"sources":["/Users/jtlovato/Documents/GitHub/AOPortfolio/AyodelePortfolio/frontend/src/screens/LatestInfoScreen.js"],"sourcesContent":["import { useEffect, useReducer } from \"react\";\nimport axios from \"axios\";\nimport Product from \"../components/Info\";\nimport LoadingBox from \"../components/LoadingBox\";\nimport MessageBox from \"../components/MessageBox\";\nimport Info from \"../components/Info\";\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_REQUEST\":\n      return { ...state, loading: true };\n    case \"FETCH_SUCCESS\":\n      return { ...state, products: action.payload, loading: false };\n    case \"FETCH_FAIL\":\n      return { ...state, loading: false, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport default function LatestInfoScreen() {\n  const [{ loading, error, products }, dispatch] = useReducer(reducer, {\n    products: [],\n    loading: true,\n    error: \"\",\n  });\n  // const [products, setProducts] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      dispatch({ type: \"FETCH_REQUEST\" });\n      try {\n        const result = await axios.get(\"/api/products\");\n        dispatch({ type: \"FETCH_SUCCESS\", payload: result.data });\n      } catch (err) {\n        dispatch({ type: \"FETCH_FAIL\", payload: err.message });\n      }\n    };\n    fetchData();\n  }, []);\n\n  return (\n    <div>\n      <h1>Latest Blogs</h1>\n      <div className='products'>\n        {loading ? (\n          <LoadingBox />\n        ) : error ? (\n          <MessageBox variant='danger'>{error}</MessageBox>\n        ) : (\n          <div>\n            {products.map((product) => (\n              <div key={product.slug} sm={6} md={4} lg={3} className='mb-3'>\n                <Product product={product}></Product>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}